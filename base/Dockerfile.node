# TODO: refactor commonality with build-node
FROM node:12-alpine3.10

LABEL maintainer="core-tech@better.com"

ENV NPM_CONFIG_PREFIX      "/npm"
ENV NPM_GLOBAL_PACKAGE_DIR ${NPM_CONFIG_PREFIX}"/lib/node_modules"

RUN mkdir ${NPM_CONFIG_PREFIX}

# Install application base dependencies; including librdkafka deps:
#
# librdkafka: lz4-dev cyrus-sasl-dev openssl (?)
#
# NOTE that node-rdkafka itself will be copied from the build-node image
# into the node_modules for the application, BY the application container,
# IF it depends on node-rdkafka. These lib dependencies must still be
# present in the application container image because they are loaded as
# shared objects when node-rdkafka is `require(...)`d.
#
RUN  apk update                                     \
  && apk add --no-cache                             \
      coreutils openssl curl lz4-dev cyrus-sasl-dev

# In so many words, install sops v3.3.1
RUN  curl -o sops -L https://github.com/mozilla/sops/releases/download/3.3.1/sops-3.3.1.linux  \
  && sha1sum sops | grep af2fc3d3a29565b0d6a73249136965ffee62892f                              \
  && chmod +x sops                                                                             \
  && mv sops /usr/local/bin

# Database SSL certificates
COPY rds-combined-ca-bundle.pem redshift-ca-bundle.crt /tmp/
RUN  mkdir -p /etc/ssl                                                                                            \
  && cp /tmp/rds-combined-ca-bundle.pem /tmp/redshift-ca-bundle.crt /etc/ssl                                      \
  && cd /tmp                                                                                                      \
  && csplit --elide-empty-files --quiet --prefix rds-crt rds-combined-ca-bundle.pem '/-BEGIN CERTIFICATE-/' '{*}' \
  && csplit --elide-empty-files --quiet --prefix rs-crt redshift-ca-bundle.crt      '/-BEGIN CERTIFICATE-/' '{*}' \
  && for c in /tmp/rds-crt*; do mv /$c /usr/local/share/ca-certificates/aws-rds-ca-$(basename $c).crt ; done      \
  && for c in /tmp/rs-crt* ; do mv /$c /usr/local/share/ca-certificates/redshift-ca-$(basename $c).crt; done      \
  && update-ca-certificates
