FROM node:12-alpine3.10

LABEL maintainer="core-tech@better.com"

ENV NPM_CONFIG_PREFIX      "/npm"
ENV NPM_GLOBAL_PACKAGE_DIR ${NPM_CONFIG_PREFIX}"/lib/node_modules"

RUN mkdir ${NPM_CONFIG_PREFIX}

ENV NODE_RDKAFKA_INSTALL      ${NPM_GLOBAL_PACKAGE_DIR}"/node-rdkafka"
ENV NODE_RDKAFKA_VERSION_SPEC "^2.8.0"

ARG BASE_APK_DEPENDENCIES
ARG BUILD_APK_DEPENDENCIES

# Copy needed common installation scripts
COPY                                         \
  scripts/common/install-rds-certificates.sh \
  scripts/common/install-sops.sh             \
  /tmp/scripts/common/
# Copy needed build installation scripts
COPY                                   \
  scripts/build/install-semver-tool.sh \
  /tmp/scripts/build/
# Install packages then run installation scripts
RUN :                                                         \
  && apk update                                               \
  && apk upgrade                                              \
  && apk add --no-cache                                       \
    # Install python3 because it is required for node-gyp     \
    python3                                                   \
    # Base dependencies                                       \
    ${BASE_APK_DEPENDENCIES}                                  \
    # Base build dependencies                                 \
    ${BUILD_APK_DEPENDENCIES}                                 \
  # Run common install scripts                                \
  && chmod +x /tmp/scripts/common/install-rds-certificates.sh \
  && chmod +x /tmp/scripts/common/install-sops.sh             \
  && /tmp/scripts/common/install-rds-certificates.sh          \
  && /tmp/scripts/common/install-sops.sh                      \
  # Run build install scripts                                 \
  && chmod +x /tmp/scripts/build/install-semver-tool.sh       \
  && /tmp/scripts/build/install-semver-tool.sh                \
  ;

#
# NOTE: npm's --unsafe-perm suppresses the "change user to nobody"
# behavior of running with --global, so that EACCESS errors don't occur
# during the process of trying to create directories and run 'node-gyp' to
# compile and install librdkafka as part of node-rdkafka. Within a Docker
# build container, this is an acceptable decision: we're buildling our
# application and its dependencies as 'root', and running as 'nobody'
# while attempting to do so causes lots of breakage. Note that this is NOT
# the same as _running_ our application as 'root', which is far less
# advisable. [0] [1] [2]
#
# [0]: https://docs.npmjs.com/misc/config#unsafe-perm
# [1]: https://stackoverflow.com/questions/44633419/no-access-permission-error-with-npm-global-install-on-docker-image/51796938#51796938
# [2]: https://github.com/npm/npm/issues/3849
#
RUN :                                                 \
  && apk add --no-cache --virtual .rdkafka-build-deps \
      zlib-dev libc-dev linux-headers musl-dev        \
      python                                          \
  && npm install                                      \
      --unsafe-perm                                   \
      --global                                        \
      node-rdkafka@${NODE_RDKAFKA_VERSION_SPEC}       \
  && apk del .rdkafka-build-deps

# Sanity-check that node-rdkafka was installed to the expected location
RUN &>/dev/null stat ${NODE_RDKAFKA_INSTALL}

# Save exact version to an env script that derived build images can source
RUN echo "export NODE_RDKAFKA_VERSION_EXACT="$(            \
    npm ls -global -parseable -long node-rdkafka           \
    # Get <pkg>@<version> from <path>:<pkg>@<version>:...? \
    | cut -d: -f2                                          \
    # Get <version> from <pkg>@<version>                   \
    | cut -d@ -f2                                          \
  ) > /etc/rdkafka-info.sourceme.sh

# node-rdkafka for event service dependents TODO: split out / parameterize
#
# NOTE: The node-rdkafka version specified by ${NODE_RDKAFKA_VERSION_SPEC}
# MUST ALSO SATISFY the version spec used by applications. Application
# containers should in fact test this, to make sure that the spec matches
# the version required my their version of @better/events according to
# `npx semver`. This check is done by try-use-prebuilt-node-rdkafka.sh.
#
COPY scripts/try-use-prebuilt-node-rdkafka.sh /usr/local/bin/
