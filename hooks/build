#!/bin/bash
BASE_DEPENDENCIES_MAP=(
  # alpine          debian
  bash              %
  curl              %
  openssl           %
  coreutils         %
  ca-certificates   %
  # qpid proton (for activemq) needs this library to authenticate
  cyrus-sasl-plain  sasl2-bin
  # librdkafka needs these .so's at runtime
  lz4-dev           liblz4-dev
  cyrus-sasl-dev    libsasl2-dev
)

BUILD_DEPENDENCIES_MAP=(
  # alpine           debian
  jq                 %
  gcc                %
  git                %
  tar                %
  make               %
  gnupg              %
  docker             docker.io
  sqlite             sqlite3
  openssh            openssh-client
  yaml-dev           libyaml-dev
  zlib-dev           zlib1g-dev
  bzip2-dev          libbz2-dev
  build-base         build-essential
  libffi-dev         %
  sqlite-dev         libsqlite3-dev
  libxslt-dev        libxslt1-dev
  openssl-dev        libssh-dev
  readline-dev       libreadline-dev
  linux-headers      linux-headers-amd64
  libjpeg-turbo-dev  libjpeg62-turbo-dev
)

BASE_ALPINE_DEPENDENCIES=()
BASE_DEBIAN_DEPENDENCIES=()
for index in $(seq 0 2 ${#BASE_DEPENDENCIES_MAP[@]}); do
  alpine_name=${BASE_DEPENDENCIES_MAP[${index}]}
  debian_name=${BASE_DEPENDENCIES_MAP[$((${index} + 1))]}
  if [[ "${debian_name}" == '%' ]]; then
    debian_name=${alpine_name}
  fi
  BASE_ALPINE_DEPENDENCIES+=(${alpine_name})
  BASE_DEBIAN_DEPENDENCIES+=(${debian_name})
done

BUILD_ALPINE_DEPENDENCIES=()
BUILD_DEBIAN_DEPENDENCIES=()
for index in $(seq 0 2 ${#BUILD_DEPENDENCIES_MAP[@]}); do
  alpine_name=${BUILD_DEPENDENCIES_MAP[${index}]}
  debian_name=${BUILD_DEPENDENCIES_MAP[$((${index} + 1))]}
  if [[ "${debian_name}" == '%' ]]; then
    debian_name=${alpine_name}
  fi
  BUILD_ALPINE_DEPENDENCIES+=(${alpine_name})
  BUILD_DEBIAN_DEPENDENCIES+=(${debian_name})
done

git_root=$(git rev-parse --show-toplevel)

if [[ "${DOCKERFILE_PATH}" == *python* ]]; then
  BASE_DEPENDENCIES="${BASE_DEBIAN_DEPENDENCIES[*]}"
  BUILD_DEPENDENCIES="${BUILD_DEBIAN_DEPENDENCIES[*]}"
else
  BASE_DEPENDENCIES="${BASE_ALPINE_DEPENDENCIES[*]}"
  BUILD_DEPENDENCIES="${BUILD_ALPINE_DEPENDENCIES[*]}"
fi

# ${IMAGE_NAME}      is defined by Docker Hub: {repo}:{tag}
# ${DOCKERFILE_PATH} is defined by Docker Hub: {path}
echo -e "\033[1;3;38;2;255;255;0mBuild script parameters\033[0m"
echo -e "\033[1;3;38;2;255;255;0m=======================\033[0m"
echo -e "\033[1;3;38;2;255;255;0mImage name\033[0;2m ........ \033[0;1;3m${IMAGE_NAME}\033[0m"
echo -e "\033[1;3;38;2;255;255;0mDockerfile path${Fmt_reset}\033[0;2m ... \033[0;1;3m${git_root}/${DOCKERFILE_PATH}\033[0m"
docker build                                                    \
  --build-arg BASE_DEPENDENCIES="${BASE_DEPENDENCIES[*]}"       \
  --build-arg BUILD_DEPENDENCIES="${BUILD_DEPENDENCIES[*]}"     \
  --tag  "${IMAGE_NAME}"                                        \
  --file "${git_root}/${DOCKERFILE_PATH}"                       \
  ${git_root}
